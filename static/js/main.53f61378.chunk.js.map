{"version":3,"sources":["Container/styled.js","Container/index.js","Footer/styled.js","Footer/index.js","Form/Result/styled.js","Form/Result/index.js","Form/styled.js","Form/Input/index.js","Form/Select/index.js","Form/Label/styled.js","Form/Label/index.js","Form/Clock/styled.js","Form/Clock/index.js","Form/Clock/useCurrentDate.js","Form/index.js","NoDataDiv/styled.js","NoDataDiv/index.js","App.js","useAPIRates.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Container","children","StyledFooter","footer","Footer","name","StyledResult","Result","result","undefined","fromAmount","toAmount","currency","StyledForm","form","Header","h1","Button","button","Paragraph","p","StyledInput","input","Input","amount","changeAmount","type","step","required","autoFocus","placeholder","min","value","onChange","Select","handleCurrencySelect","rates","as","className","map","rate","key","indexOf","StyledLabel","label","Span","span","Label","spanContent","userActionField","StyledClock","Clock","date","useState","Date","setDate","useEffect","intervalID","setInterval","clearInterval","day","toLocaleDateString","month","weekday","time","toLocaleTimeString","useCurrentDate","Form","countResult","setAmount","setCurrency","onSubmit","event","preventDefault","target","Div","NoDataDiv","statusInfo","App","setResult","ratesData","loading","error","errorStatus","setRatesData","setTimeout","fetch","then","response","ok","Error","json","catch","console","useAPIrates","toFixed","Object","keys","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.53f61378.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px 100px;\r\n    min-height: 100vh;\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 500px) {\r\n        padding: 10px;\r\n    }\r\n`;","import React from 'react';\r\nimport { Wrapper } from './styled'\r\n\r\nconst Container = ({children}) => (\r\n        <Wrapper>\r\n            {children}\r\n        </Wrapper>\r\n);\r\n\r\nexport default Container;","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.footer`\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    transform: translateY(-100%);\r\n    text-align: center;\r\n    font-size: 12px;\r\n    padding: 5px;\r\n\r\n`;","import React from 'react';\r\nimport {StyledFooter} from './styled';\r\n\r\nconst Footer = ({name}) => (\r\n    <StyledFooter>\r\n        &copy;{name}\r\n    </StyledFooter>\r\n);\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\nexport const StyledResult = styled.div`\r\n    text-align: center;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n`;","import React from 'react'; \r\nimport { StyledResult } from './styled';\r\n\r\nconst Result = ({result}) => (\r\n    <StyledResult>\r\n        {\r\n            result !== undefined ? \r\n                <>\r\n                    {result.fromAmount}&nbsp;PLN&nbsp;= \r\n                    <strong>\r\n                        {\" \"}{result.toAmount}&nbsp;{result.currency}\r\n                    </strong> \r\n                </>\r\n                :\r\n                \"\"\r\n        }\r\n    </StyledResult>\r\n);\r\n\r\nexport default Result;","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form `\r\n    width: 100%;\r\n    padding: 20px 30px;\r\n    background-color: rgb(255, 255, 255, .9);\r\n    border: hsl(0, 0%, 30%) solid 1px;\r\n    border-radius: 30px;\r\n\r\n    @media (max-width: 767px) {\r\n        padding: 20px;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.h1 `\r\n    text-transform: uppercase;\r\n    font-size: 26px;\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n\r\n    @media (max-width: 767px) {\r\n      margin-bottom: 5px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button `\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    padding: 10px;\r\n    margin: 30px 0 10px;\r\n    border: 1px solid rgb(5, 5, 5);\r\n    border-radius: 5px;\r\n    background-color: #EB003A;\r\n    transition: .3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(345, 100%, 51%);\r\n        transform: scale(1.01);\r\n    }\r\n    @media (max-width: 767px) {\r\n        margin: 0 0 10px;\r\n    }\r\n`;\r\n\r\nexport const Paragraph = styled.p `\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    transition: .3s;\r\n\r\n    &:hover {\r\n        transform: scale(1.01);\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n        margin-bottom: 15px;\r\n    }\r\n`;","import React from 'react';\r\nimport {StyledInput} from '../styled';\r\n\r\nconst Input = ({amount, changeAmount}) => (\r\n    <StyledInput\r\n        type=\"number\" \r\n        step=\"0.01\" \r\n        required \r\n        autoFocus\r\n        placeholder=\"Wpisz kwotę\"\r\n        min=\"0.01\" \r\n        value={amount}\r\n        onChange={changeAmount}\r\n    />\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\nimport { StyledInput } from '../styled';\r\n\r\nconst Select = ({currency, handleCurrencySelect, rates}) => {\r\n\r\n   return <StyledInput \r\n        as=\"select\"\r\n        value={currency}\r\n        required\r\n        name=\"currencies\" \r\n        onChange={handleCurrencySelect}\r\n    >\r\n        <option \r\n            className=\"form__currency\" \r\n            value=\"\"\r\n        >\r\n                Rozwiń, aby wybrać walutę\r\n        </option>\r\n        {rates.map(rate => \r\n            <option \r\n                className=\"form__currency\" \r\n                key={rates.indexOf(rate)} \r\n                value={rate}\r\n            >\r\n                    {rate}\r\n            </option>\r\n        )}\r\n    </StyledInput>\r\n};\r\n\r\nexport default Select;","import styled from 'styled-components';\r\n\r\nexport const StyledLabel = styled.label`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 5px;\r\n\r\n    @media (max-width: 767px) {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    flex-basis: 200px;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    text-align: left;\r\n    padding-left: 5px;\r\n    padding-top: 5px;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 30px;\r\n    }\r\n`;","import React from 'react';\r\nimport { StyledLabel, Span } from './styled';\r\n\r\nconst Label = ({ spanContent, userActionField }) => (\r\n    <StyledLabel>\r\n        <Span className=\"form__span\">{spanContent}*:</Span>\r\n        {userActionField}\r\n    </StyledLabel>\r\n);\r\n\r\nexport default Label;","import styled from 'styled-components';\r\n\r\nexport const StyledClock = styled.div`\r\n    text-align: right;\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 12px;\r\n    padding: 5px 15px;\r\n    margin: 5px 0 40px;\r\n\r\n    @media (max-width: 767px) {\r\n        font-size: 10px;        \r\n    }\r\n`;","import React from 'react';\r\nimport { useCurrentDate } from './useCurrentDate';\r\nimport { StyledClock } from './styled';\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <>\r\n        <StyledClock>\r\n            Dzisiaj jest {date}.\r\n        </StyledClock>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {      \r\n        const intervalID = setInterval(() => {\r\n            setDate(date => date = new Date())\r\n        }, 1000);\r\n\r\n        return () => { \r\n            clearInterval(intervalID)\r\n        };\r\n    }, [])\r\n\r\n    const day = date.toLocaleDateString(\"pl-PL\", {\r\n                    day: \"numeric\", \r\n                    month: \"long\",\r\n                    weekday: \"long\"\r\n                });\r\n    const time = date.toLocaleTimeString(\"pl-PL\");\r\n\r\n    const fullDate = `${day}, ${time}`;\r\n    \r\n    return fullDate;\r\n};","import React, { useState } from 'react';\r\nimport Result from './Result';\r\nimport Input from './Input';\r\nimport Select from './Select';\r\nimport Label from './Label';\r\nimport { Clock } from './Clock';\r\nimport { StyledForm, Header, Button, Paragraph } from './styled';\r\n\r\nconst Form = ({countResult, result, date, rates}) => {\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [currency, setCurrency] = useState(\"\")\r\n\r\n    const changeAmount = ({target}) => {\r\n        setAmount(target.value)\r\n    }\r\n    \r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        countResult(amount, currency);           \r\n    }\r\n    \r\n    const handleCurrencySelect = ({target}) => {\r\n        setCurrency(target.value);\r\n    }\r\n\r\n    return  <StyledForm \r\n                onSubmit={onFormSubmit}\r\n            >\r\n                <Clock />\r\n                <Header>Przelicznik walut</Header>\r\n                <Label \r\n                    spanContent={\"Kwota w zł\"} \r\n                    userActionField={\r\n                                    <Input \r\n                                        amount={amount}\r\n                                        changeAmount={changeAmount}\r\n                                    />\r\n                                    }\r\n                />\r\n                <Label \r\n                    spanContent={\"Waluta\"}\r\n                    userActionField={\r\n                                    <Select \r\n                                        rates={rates}\r\n                                        currency={currency}\r\n                                        handleCurrencySelect={handleCurrencySelect} \r\n                                    />\r\n                                    }\r\n                />    \r\n                <Button>Przelicz</Button>\r\n                <Paragraph>Waluty przeliczane są na podstawie danych z Europejskiego Banku Centralnego z&nbsp;dnia&nbsp;{date} </Paragraph>\r\n                <Result result={result} />\r\n            </StyledForm>\r\n    \r\n};\r\n\r\nexport default Form;","import styled from 'styled-components';\r\n\r\n\r\nexport const Div = styled.div`\r\n    width: 100%;\r\n    padding: 20px 30px;\r\n    background-color: rgb(255, 255, 255, .9);\r\n    border: hsl(0, 0%, 30%) solid 1px;\r\n    border-radius: 30px;\r\n    text-align: center;\r\n\r\n\r\n    @media (max-width: 767px) {\r\n        padding: 20px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Div } from './styled'\r\n\r\nexport const NoDataDiv = ({statusInfo}) => {\r\n    return <Div>\r\n        {statusInfo}\r\n    </Div>\r\n};","import React, { useState } from 'react';\r\nimport Container from './Container';\r\nimport Footer from './Footer';\r\nimport Form from './Form';\r\nimport { NoDataDiv } from './NoDataDiv';\r\nimport { useAPIrates } from './useAPIRates';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState()  \r\n\r\n  const ratesData = useAPIrates();\r\n  \r\n  const countResult = (amount, currency) => {\r\n    const rate = ratesData.rates[currency];\r\n    \r\n    setResult({\r\n      fromAmount: +amount,\r\n      toAmount: (amount / rate).toFixed(3),\r\n      currency,\r\n    })\r\n  };  \r\n\r\n  return (\r\n    <Container>\r\n      {ratesData.rates ? \r\n              <Form \r\n              countResult={countResult} \r\n              result={result}\r\n              date={ratesData.date}\r\n              rates={Object.keys(ratesData.rates)}\r\n            /> : \r\n            <NoDataDiv\r\n              statusInfo={!ratesData.errorStatus ? ratesData.loading : ratesData.error}\r\n            >\r\n            </NoDataDiv>\r\n    }\r\n        <Footer name={\"Krzysztof Kwieciński 2020\"} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useAPIrates = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n      loading: \"Trwa pobieranie danych, proszę czekać...\",\r\n      error: \"Niestety wystąpił błąd, proszę ponownie załadować stronę.\",\r\n      errorStatus: false,\r\n    });\r\n  \r\n    useEffect(() => {\r\n          setTimeout(() => {\r\n            fetch(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n            .then(response => {\r\n                if(!response.ok) {\r\n                  throw new Error();\r\n                }\r\n                return response;\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => setRatesData({...ratesData, date: response.date, rates: response.rates}))\r\n            .catch(error => {\r\n                setRatesData({...ratesData, errorStatus: true})\r\n                console.error(error);\r\n            });\r\n          }, 1000);\r\n      }, )   \r\n     return ratesData;\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}